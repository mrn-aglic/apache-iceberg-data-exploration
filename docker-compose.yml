version: '3.8'

services:
  spark-iceberg:
    image: spark-iceberg
    container_name: spark-iceberg
    build: ./spark
    entrypoint: [ './entrypoint.sh', 'master' ]
#    env_file:
#      - spark/.env
    depends_on:
      - minio
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    ports:
      - '8888:8888'
      - '8080:8080'
      - '10000:10000'
      - '10001:10001'


  spark-worker:
    image: spark-iceberg
    container_name: spark-worker
    entrypoint: [ './entrypoint.sh', 'worker' ]
    depends_on:
      - spark-iceberg
    env_file:
      - spark/.env
    volumes:
      - ./data:/opt/spark/data
      - ./spark_apps:/opt/spark/apps
      - spark-logs:/opt/spark/spark-events
    ports:
      - '8081:8081'

  spark-history-server:
    container_name: spark-history
    image: spark-iceberg
    entrypoint: [ './entrypoint.sh', 'history' ]
    depends_on:
      - spark-iceberg
    env_file:
      - spark/.env
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'

  minio:
    image: minio/minio
    container_name: iceberg-s3
    ports:
      - '9000:9000'
      - '9001:9001'
    env_file:
      - .env
    command: server --console-address ':9001' /data
    volumes:
      - minio-data:/minio/data
    healthcheck:
      test: [ 'CMD', 'curl', '-f', 'http://localhost:9000/minio/health/live' ]
      interval: 30s
      timeout: 20s
      retries: 3

  minio_init:
    build: ./minio/
    env_file:
      - .env
    environment:
      - USER=user
      - COPY_DIR=false
      - INPUT_BUCKETS=data
    depends_on:
      - minio
    entrypoint: /bin/sh ./entrypoint.sh

volumes:
  spark-logs:
  minio-data:
